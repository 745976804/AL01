/*
在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。
示例 1：
输入：
[2, 3, 1, 0, 2, 5, 3]
输出：2 或 3 
*/
class Solution{
    public int findRepeatNumber01(int[] nums) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(nums[i])){
                int t = map.get(nums[i]) + 1;
                map.put(nums[i],t);
            }

            else{
                map.put(nums[i],1);
            }
        }
        for(Integer i : map.keySet()){
            if(map.get(i)>1){
                return i;
            }
        }
        return 0;
    }

    public int findRepeatNumber02(int[] nums){
        int[] aux = new int[nums.length];
        for (int i=0;i<nums.length;i++){
            aux[i]=0;
        }
        for (int i=0;i<nums.length;i++){
            aux[nums[i]]++;
        }
        for (int i=0;i<nums.length;i++){
            if (aux[i]>1)
                return i;
        }
        return 0;
    }

    public int findRepeatNumber03(int[] nums){
        int temp;
        for(int i=0;i<nums.length;i++){
            while (nums[i]!=i){
                if(nums[i]==nums[nums[i]]){
                    return nums[i];
                }
                temp=nums[i];
                nums[i]=nums[temp];
                nums[temp]=temp;
            }
        }
        return -1;
    }
}
