public class Re {
    public static void main(String[] args){
        int[] s = new int[10];
        for (int i=0;i<10;i++){
            s[i] = i;
        }
        System.out.println(s[9]);

        System.out.println(rank(s,5,0,9));
    }
    //递归求阶乘
    public static double Hiear(int N) {
        //first case:N < 0
        if (N < 0) return -1;

        //second case:N > 1
        while (N > 1) {
//            N--;
//            return (N+1) * Hiear(N);
            return  N * Hiear(N-1);
        }
        //last case:N == 1
        return 1;

//        if (n <= 1){
//            return 1;
//        }else{
//            return Hiear(n-1) * n;
//        }
    }
    //递归二分排序
    public static int rank(int[] s, int key, int low, int high){
        //first case
        if(low > high) return -1;

        int mid = (low + high) / 2;
        //last case
        if (s[mid] == key)
            return key;
        //second case
        else if (s[mid] < key)
            return rank(s, key, mid + 1 , high);
        //third case
        else if (s[mid] > key)
            return rank(s, key, low ,mid - 1);
    }
}

